pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS')
        AWS_SECRET_ACCESS_KEY = credentials('AWS')
    } 

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'Githubcreds', branch: 'custom_modules', url: 'https://github.com/devsecopsmurali/CICD_terraform.git'
            }
        }
         stage('Terraform init') {
            steps {
                sh 'cd dev_module_3;terraform init'
            }
        }
       
        // stage('Terraform refresh') {
        //     steps {
        //         sh 'cd dev_module_3;terraform refresh'
        //     }
        // }
        stage('Terraform apply') {
            steps {
                sh "cd dev_module_3;terraform apply --auto-approve"
            }
        } 
         stage('Terraform output') {
            steps {
                script {
                    def ec2InstanceId
                    catchError {
                        ec2InstanceId = sh(
                            script: 'cd dev_module_3;terraform output -raw ec2_complete_public_ip',
                            returnStdout: true
                        ).trim()
                    }
                    echo "The EC2 instance ID is: ${ec2InstanceId}"
                    env.EC2_INSTANCE_ID = ec2InstanceId
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                script {
                    def inventoryFile = "${EC2_INSTANCE_ID}"
                    sh "ansible-playbook dev_module_3/config.yml -i ${inventoryFile},"

                }
            }
        }
    }

    }
