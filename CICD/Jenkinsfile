pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS')
        AWS_SECRET_ACCESS_KEY = credentials('AWS')
    } 

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'Githubcreds', branch: 'custom_modules', url: 'https://github.com/devsecopsmurali/CICD_terraform.git'
            }
        }
         stage('Terraform init') {
            steps {
                sh 'cd dev_module_2;terraform init'
            }
        }
        stage('echo') {
            steps {
                sh 'echo "hi"'
            }
        }
        stage('Terraform refresh') {
            steps {
                sh 'cd dev_module_2;terraform refresh'
            }
        }
        stage('Terraform apply') {
            steps {
                sh "cd dev_module_2;terraform apply --auto-approve"
            }
        }
        stage('Retrieve Host IPs') {
            steps {
                script {
                    // Use Terraform output to retrieve host IPs
                    def output = sh(script: 'terraform output -json', returnStdout: true).trim()
                    def hostIPs = output =~ /"(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})"/
                    
                    // Extract IPs from the match groups
                    def ipsList = hostIPs.collect { it[1] }
                    def hostIPsString = ipsList.join(',')
                    
                    echo "Host IPs: $hostIPsString"
                    
                    // Write host IPs to a file
                    writeFile file: 'host_ips.txt', text: hostIPsString
                }
            }
        }
        stage('Ansible Configuration') {
            steps {
                // Run Ansible playbooks to configure provisioned hosts
                script {
                    sh "ansible-playbook config.yml --extra-vars '@host_ips.txt'"
                }
            }
        }
    }

    }
